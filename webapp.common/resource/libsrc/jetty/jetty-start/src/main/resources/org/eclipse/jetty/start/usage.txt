Usage: java -jar start.jar [options...] [properties...] [configs...]

  The start.jar builds a classpath and executes a main java class with
  a classloader built from that classpath.  By default the start.jar
  mechanism is configured to start the jetty server, but it can be 
  configured to start any java main class.

Command Line Options:
  --help           This help / usage information.
  
  --version        Print the version information for Jetty and
                   dependent jars, then exit.
                   
  --list-options   List the details of each classpath OPTION
  
  --list-config    List the start.config file.
                                    
  --dry-run        Print the command line that the start.jar generates,
                   then exit. This may be used to generate command lines
                   when the start.ini includes -X or -D arguments.
                   
  --exec           Run the generated command line (see --dry-run) in 
                   a sub process. This can be used when start.ini
                   contains -X or -D arguments, but creates an extra
                   JVM instance.
                     
  --stop           Send a stop signal to the running Jetty instance.
  
  --daemon         Start in daemon mode with stderr and stdout 
                   redirected to ${jetty.log}/start.log
  
  --config=<file>  Specify an alternate start.config file.  
                   The default is the start.config file inside
                   the start.jar. The default can also be specified
                   with the START system property.
  
  --ini=<file>     Load command line arguments from a file. If 
                   no --ini options are specified, then the 
                   start.ini file will be read if it exists in 
                   jetty.home. If specified jetty.home/start.ini
                   and additional .ini files in jetty.home/start.d/
                   will NOT be read. A --ini option with no file indicates that
                   start.ini should not be read.
                   
  --pre=<file>     Specify a configuration file that is to be processed
                   before any configuration files listed in start.ini

System Properties:
  These are set with a command line like "java -Dname=value ..." and are
  accessible via the java.lang.System#getProperty(String) API.
  Some key system properties are:
  
    org.eclipse.jetty.util.log.class=[class]   
      A Low Level Jetty Logger Implementation to use
      (default: org.eclipse.jetty.util.log.Slf4jLog)
      
    org.eclipse.jetty.util.log.DEBUG=[boolean]
      Debug logging for the stderr and javautil Loggers. Slf4j
      and other loggers must be separately configured for debug.
      (default: false)
      
    org.eclipse.jetty.util.log.IGNORED=[boolean]
      Ignored exceptions are logged, independent of DEBUG settings
      (default: false)

    org.eclipse.jetty.util.log.SOURCE=[boolean]
      The source location of logs is logged in the stderr Logger.
      (default: false)
      
    com.sun.management.jmxremote
      Enable remote JMX management in Sun JVMS.
      
      
Properties:
  These are set with a command line like "java -jar start.jar name=value"
  and only affect the start mechanism.  Some of these are defined in the 
  default start.config and will not be available if another configuration
  file is used. NOTE: Not all properties are listed here:

    path=[directory]
      An additional class path element to add to the started class path. Typically
      this is used to add directories of classes and/or resources
      
    lib=[directory]
      An additional library directory to add to the started class path. This must
      be a (deep) directory of jars
      
    STOP.PORT=[number]
      The port to use to stop the running Jetty server.
      Required along with STOP.KEY if you want to use the --stop option above.
      
    STOP.KEY=[alphanumeric]
      The passphrase defined to stop the server.
      Requried along with STOP.PORT if you want to use the --stop option above.

    STOP.WAIT=[number]
      The time (in seconds) to wait for confirmation that the running Jetty server
      has stopped. If not specified, the stopper will wait indefinitely. Use in 
      conjunction with the --stop option.
      
    DEBUG=true
      Enable debug on the start mechanism and sets the
      org.eclipse.jetty.util.log.stderr.DEBUG system property to true. 
      (default: false)
      
    OPTIONS=[option,option,...]
      Enable classpath OPTIONS. Each options represents one or more jars 
      to be added to the classpath. The options are defined in 
      the start.config file and can be listed with --help or --list-options.
      By convention, options starting with a capital letter (eg Server) 
      are aggregations of other available options. Available OPTIONS:

        @OPTIONS@


Available Configurations:
  By convention, configuration files are kept in $JETTY_HOME/etc.
  The known configuration files are:
  
    @CONFIGS@


Defaults:
  A start.ini file may be used to specify default arguments to start.jar,
  which are used if no command line arguments are provided and override 
  the defaults in the start.config file. If the directory jetty.home/start.d
  exists, then multiple *.ini files will be read from that directory in 
  alphabetical order. If --ini options are provided on  the command line,
  then start.ini and start.d will NOT be read. 
  
  The current start.ini arguments are:

    @STARTINI@
