	public void run(ExecutionContext context) {
		String sourceText = context.lookupVariable(sourceTextVariable, String.class);

		AstBuilder builder = new AstBuilder();
		try {
			builder.parse(new StringReader(sourceText));
		} catch (IOException e) {
			throw new ScriptErrorException(e.toString());
		}
		
		PsmFile psmFile = builder.getResult();
		Context psmContext = new Context();
		psmFile.collectConstantsAndLabels(psmContext);
		int[] instructions = psmFile.encode(psmContext);
		
		byte[] bits = new byte[1024 * 18];
		for (int i=0; i<1024; i++) {
			for (int j=0; j<18; j++) {
				bits[i * 18 + j] = (byte)((instructions[i] >> (17 - j)) & 1);
			}
		}
		
		MemoryInitializer result = HdlFactory.eINSTANCE.createMemoryInitializer();
		result.setAddressBits(10);
		result.setDataBits(18);
		result.setContents(bits);
		
		context.setVariable(resultVariable, result);
	}