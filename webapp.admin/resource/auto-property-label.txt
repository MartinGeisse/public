
Idee: Einem WebMarkupContainer wird ein Model für eine Java Bean gegeben. Auto-Labels sind Labels
innerhalb dieses Containers; die ALs werden nur im Markup gekennzeichnet -- man muss nicht
explizit Label-Instanzen erzeugen -- und bekommen entsprechende PropertyModels bzw.
CompoundPropertyModels zugewiesen.

Mögliche Realisierung:
- <wicket:message> für den Trigger im Markup. Da bekommt man sogar die lokalisierung "um das
  Label herum" geschenkt
- Für Fälle, wo das nicht nötig ist, und damit man für solche Fälle nicht stattdessen
  jeweils einen Eintrag in die .properties schreiben muss: Spezialisierte Localizer-Klasse,
  welche z.B. einen "bekannten" Präfix erkennt und dafür immer den Key (ohne Präfix) als
  "lokalisierten" Wert liefert. Evtl gibt es das sogar im Standard-Localizer schon.
  
Nachteil: Das geht auch wieder nur für Labels. All das trifft nicht das, was mit
Freemarker-Templates möglich wäre. Oder halt mit "normalen" Wicket-Komponenten, z.B.
DataView, aber das wieder nur für die Leute mit Wicket-Erfahrung.




