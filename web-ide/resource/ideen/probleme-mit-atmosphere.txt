
Mehrere Renderings (und
entsprechend mehrere AtmosphereResources) zur selben Page sind
nicht intuitiv! Wäre der Fall, wenn eine Page in mehreren
Tabs geöffnet wird, Cross-Session geht das eh nicht. Außerdem
sind alle Websocket-Pages stateful, also hat es auch nichts
mit wiederverwendbaren Stateless Pages zu tun. Fazit: Es würde
reichen, dass nur das letzte Rendering je Page überhaupt in
wicket-atmosphere vorgehalten wird. Die anderen könnte man
rauswerfen und dann würden auch die doppelten Push-Events nicht
mehr auftreten -> Problem gelöst, Performance besser (keine
unnötigen Push-Render-Voränge für "alte" AtmosphereResources)
und (per Redirect) keine unintuitiven "zwei Tabs mit derselben
Page".

Mit immer nur der neuesten UUID ist auch das Terminal-Problem
gelöst.

Realisierung = ?. Da keine Stateless Pages im Spiel sind, evtl.
doch die "eine Page mit großem Atmosphere Container". URLs geben
eine Seite nur bis auf den Workspace an, da die Ressource
innerhalb des Workspace per FileView ausgewählt wird -- eine
URL mit Dateipfad würde also eine Seite in dem Workspace öffnen
und dann Redirecten, so dass die URL den Pfad nicht mehr enthält.
Cooler wäre natürlich, dass die URL dann die vom Workspace
bleibt und der Rest per Javascript passiert, zumindest auf dem
Desktop. Das beißt sich: Atmosphere vs. Stateless Pages.
-> nein, beißt sich nicht, der AtmosphereContainer darf nur
nicht "naiv" gebaut sein:

Die äußere Page ist Stateless. Ihre URL wird als Parameter
verstanden. Sie öffnet in einem iframe die eigentliche
Stateful+Atmopshere Page. Diese erkennt auch, wenn sie nicht
in einem iframe ist, und erzeugt dann eine neue Page-Instanz.
Außerdem "new tab behavior" als weitere Absicherung. Die innere
Page wird dadurch nur in einem Tab gezeigt.

---

AjaxNewWindowNotifyingBehavior: Rendert einmalig den Befehl
	window.name = '... random key ...';
wobei der Key im Konstruktor einmalig erzeugt wird. Danach wird
beim Laden der Seite geprüft, ob der Name stimmt -- beim
Reload bleibt der Name; ein neues Tab hat einen neuen Namen.
Das könnte ich auch so machen, allerdings ist die Schwierigkeit
eher, im Falle eines Mismatch die Seite zu verwerfen bevor
wicket-atmosphere eine neue AtmosphereResource beim Server
anfordert. Dieses Script müsste ganz oben hin (vor w-a)
und müsste w-a unterbinden oder direkt eine neue Seite
laden. AjaxNewWindowNotifyingBehavior unterbindet nichts
sondern sendet nach 30 msec einen Callback zum Server, damit
der etwas tun kann. Dann ist es schon zu spät.

